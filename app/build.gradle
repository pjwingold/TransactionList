plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'java-test-fixtures'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

ext.versionName = '1.0'
ext.versionCode = 1

android {
    buildToolsVersion prop("version.build.tools")
    compileSdkVersion prop("version.sdk.max").toInteger()

    defaultConfig {
        applicationId "au.com.pjwin.transaction_list"
        minSdkVersion prop("version.sdk.min").toInteger()
        targetSdkVersion prop("version.sdk.max").toInteger()
        versionCode project.versionCode
        versionName project.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'SCHEMA', '"https"'
        buildConfigField 'String', 'HOST', '"www.dropbox.com"'
        buildConfigField 'int', 'PORT', '443'
        buildConfigField 'long', 'CONNECTION_TIMEOUT', '10'
        buildConfigField 'long', 'READ_TIMEOUT', '10'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    testOptions {
        unitTests {
            all {
                jvmArgs '-noverify'
            }
            returnDefaultValues = true
            includeAndroidResources = true

        }
    }

    sourceSets {
        main {
            java.srcDirs = [
                    project(':app').file("src/main/java"),
                    project(":common").file("src/main/java")
            ]
            res.srcDirs = [
                    project(':app').file("src/main/res"),
                    //project(":common").file("src/main/res")
            ]
        }
        test {
            java.srcDirs = [
                    project(':app').file("src/test/java"),
                    project(":common").file("src/main/java"),
                    project(":common").file("src/test/java")
            ]

            resources.srcDirs = [//need full path
                   project(':app').file("src/test/resources")
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    String robolectricVersion = prop("version.robolectric")
    String mockkVersion = prop("version.mockk")
    implementation project(':common')
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.13.0")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.google.android.material:material:1.5.0'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    testImplementation 'androidx.navigation:navigation-testing:2.4.1'

    //testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    //kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}